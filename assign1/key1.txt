Exercise 1.1
1. e m a c s SP e x e r 1 . h t m l RET
2. C-s P U M-f
3. C-s L a M-f
4. C-s s e l f M-f
5. C-s a r r o w M-f
6. C-e
7. C-a
8. I used the emacs shortcuts
9. No arrow keys used.
10. C-x C-c

Exercise 1.2
1. e m a c s SP e x e r 2 . h t m l RET
2. C-s < ! - C-a C-k
3. C-s D E L C-a C-k
4. C-s < ! C-a C-u 3 C-k
5. C-s < ! C-b C-b C-u 7 C-d

Exercise 1.3
1. e m a c s SP e x e r 3 . h t m l RET
2. C-s A M-f C-f C-d 3 7 C-s A M-f C-f C-d 3 7
3. C-x [ C-s U T C-b C-b C-u 5 C-d U S - A S C I I C-s U T C-b C-b C-u 5 C-d
   U S - A S C I I 
4. C-x [ C-s < / o C-a RET
5. C-x C-c y RET y e s RET

Exercise 1.4
1. c a t SP e x e r 2 . h t m l SP e x e r 2 . d i f f SP > e x e r 4 . h t m l
2. e m a c s SP e x e r 4 . h t m l
3&4. C-x ] C-p C-p C-p C-p C-p C-f C-k C-s s h o u l d C-r C-r C-a C-k C-y M-y
   C-x ] C-u 1 7 C-p C-d C-p C-d C-p C-d C-u 3 C-k C-s i t < / h 2 C-r C-r C-n
   C-n C-y C-u 3 C-k C-x ] C-u 2 5 C-p C-d C-k C-s c s < / h 2 C-r C-r C-n C-n
   C-y C-x ] C-u 3 6 C-p C-d C-k C-s n t < / h 2 C-r C-r C-n C-n C-y
5. C-x ] C-u - 3 9 C-k
6. C-_
7. - - > C-u 4 0 C-p C-a < ! C-u 6 C-e DEL C-u 9 C-n DEL
8. C-x [ M-% < o l > RET < 0 l > RET !
 Found 7 '<ol>'
9. C-x C-c y d i f f SP - u SP e x e r 1 . h t m l SP e x e r 4 . h t m l
   SP > e x e r 4 . d i f f
   confirmed

Exercise 1.5
1. m k d i r SP ~ / j u n k
2. e m a c s SP h e l l o . c
   then typed the text out and saved and exited
3. e m a c s SP h e l l o . c M-x c o m p i l e RET h e TAB - o SP h e l l o RET
4. M-x c o m p i l e RET
-*- mode: compilation; default-directory: "~/junk/" -*-
Compilation started at Sun Oct  2 01:50:35

make -k hello.c
make: Nothing to be done for `hello.c'.

Compilation finished at Sat Oct  1 01:50:35

Exercise 1.6
1. C-x b RET
2. ( r a n d o m ) C-j
3. ( s e t q SP x SP ( r a n d o m ) ) C-j
   ( s e t q SP y SP ( r a n d o m ) ) C-j
   
x: 2016668970681562763
y: -178217587225682834
4. The output of (* x y) was wrong (-1684519096021965894)
5. M-: ( * SP x SP y ) RET
output: -1684519096021965894 (#o242373054724017721672, #x289f62cea03fa3ba)
this gives the octal ad hex number format as well. The random numbers probably
depend on some constantly changing factor; If given this factor and the formula
used to calculate the number, we could predict the 'random' number.
The probability that the * result is correct is very slim. one number
would need to be very close to 0 for the product to still be representable in 
~61 bits.
